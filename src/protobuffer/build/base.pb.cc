// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: base.proto

#include "base.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace Base {
class WelcomeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Welcome>
      _instance;
} _Welcome_default_instance_;
class HelloDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Hello>
      _instance;
} _Hello_default_instance_;
class DuckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Duck>
      _instance;
} _Duck_default_instance_;
}  // namespace Base
namespace protobuf_base_2eproto {
static void InitDefaultsWelcome() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Base::_Welcome_default_instance_;
    new (ptr) ::Base::Welcome();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Base::Welcome::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Welcome =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWelcome}, {}};

static void InitDefaultsHello() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Base::_Hello_default_instance_;
    new (ptr) ::Base::Hello();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Base::Hello::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Hello =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHello}, {}};

static void InitDefaultsDuck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Base::_Duck_default_instance_;
    new (ptr) ::Base::Duck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Base::Duck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Duck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDuck}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Welcome.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Hello.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Duck.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Base::Welcome, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Base::Welcome, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Base::Welcome, uuid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Base::Hello, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Base::Hello, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Base::Hello, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Base::Hello, nickname_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Base::Duck, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Base::Duck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Base::Duck, sound_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::Base::Welcome)},
  { 7, 14, sizeof(::Base::Hello)},
  { 16, 22, sizeof(::Base::Duck)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Base::_Welcome_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Base::_Hello_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Base::_Duck_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "base.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nbase.proto\022\004Base\"\027\n\007Welcome\022\014\n\004uuid\030\001 "
      "\002(\t\"\'\n\005Hello\022\014\n\004uuid\030\002 \002(\t\022\020\n\010nickname\030\001"
      " \002(\t\"\025\n\004Duck\022\r\n\005sound\030\001 \002(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 107);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "base.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_base_2eproto
namespace Base {

// ===================================================================

void Welcome::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Welcome::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Welcome::Welcome()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_2eproto::scc_info_Welcome.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Base.Welcome)
}
Welcome::Welcome(const Welcome& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_uuid()) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:Base.Welcome)
}

void Welcome::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Welcome::~Welcome() {
  // @@protoc_insertion_point(destructor:Base.Welcome)
  SharedDtor();
}

void Welcome::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Welcome::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Welcome::descriptor() {
  ::protobuf_base_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Welcome& Welcome::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_2eproto::scc_info_Welcome.base);
  return *internal_default_instance();
}


void Welcome::Clear() {
// @@protoc_insertion_point(message_clear_start:Base.Welcome)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    uuid_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Welcome::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Base.Welcome)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Base.Welcome.uuid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Base.Welcome)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Base.Welcome)
  return false;
#undef DO_
}

void Welcome::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Base.Welcome)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string uuid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Base.Welcome.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uuid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Base.Welcome)
}

::google::protobuf::uint8* Welcome::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Base.Welcome)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string uuid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Base.Welcome.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uuid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Base.Welcome)
  return target;
}

size_t Welcome::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Base.Welcome)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string uuid = 1;
  if (has_uuid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Welcome::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Base.Welcome)
  GOOGLE_DCHECK_NE(&from, this);
  const Welcome* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Welcome>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Base.Welcome)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Base.Welcome)
    MergeFrom(*source);
  }
}

void Welcome::MergeFrom(const Welcome& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Base.Welcome)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_uuid()) {
    set_has_uuid();
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
}

void Welcome::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Base.Welcome)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Welcome::CopyFrom(const Welcome& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Base.Welcome)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Welcome::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Welcome::Swap(Welcome* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Welcome::InternalSwap(Welcome* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Welcome::GetMetadata() const {
  protobuf_base_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Hello::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Hello::kUuidFieldNumber;
const int Hello::kNicknameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Hello::Hello()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_2eproto::scc_info_Hello.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Base.Hello)
}
Hello::Hello(const Hello& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_uuid()) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:Base.Hello)
}

void Hello::SharedCtor() {
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Hello::~Hello() {
  // @@protoc_insertion_point(destructor:Base.Hello)
  SharedDtor();
}

void Hello::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Hello::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Hello::descriptor() {
  ::protobuf_base_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Hello& Hello::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_2eproto::scc_info_Hello.base);
  return *internal_default_instance();
}


void Hello::Clear() {
// @@protoc_insertion_point(message_clear_start:Base.Hello)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      nickname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      uuid_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Hello::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Base.Hello)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string nickname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Base.Hello.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Base.Hello.uuid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Base.Hello)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Base.Hello)
  return false;
#undef DO_
}

void Hello::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Base.Hello)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string nickname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Base.Hello.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->nickname(), output);
  }

  // required string uuid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Base.Hello.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uuid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Base.Hello)
}

::google::protobuf::uint8* Hello::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Base.Hello)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string nickname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Base.Hello.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nickname(), target);
  }

  // required string uuid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Base.Hello.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uuid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Base.Hello)
  return target;
}

size_t Hello::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Base.Hello)
  size_t total_size = 0;

  if (has_nickname()) {
    // required string nickname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  if (has_uuid()) {
    // required string uuid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  return total_size;
}
size_t Hello::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Base.Hello)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string nickname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());

    // required string uuid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Hello::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Base.Hello)
  GOOGLE_DCHECK_NE(&from, this);
  const Hello* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Hello>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Base.Hello)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Base.Hello)
    MergeFrom(*source);
  }
}

void Hello::MergeFrom(const Hello& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Base.Hello)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_uuid();
      uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
    }
  }
}

void Hello::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Base.Hello)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Hello::CopyFrom(const Hello& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Base.Hello)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Hello::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Hello::Swap(Hello* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Hello::InternalSwap(Hello* other) {
  using std::swap;
  nickname_.Swap(&other->nickname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  uuid_.Swap(&other->uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Hello::GetMetadata() const {
  protobuf_base_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Duck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Duck::kSoundFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Duck::Duck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_2eproto::scc_info_Duck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Base.Duck)
}
Duck::Duck(const Duck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sound_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sound()) {
    sound_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sound_);
  }
  // @@protoc_insertion_point(copy_constructor:Base.Duck)
}

void Duck::SharedCtor() {
  sound_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Duck::~Duck() {
  // @@protoc_insertion_point(destructor:Base.Duck)
  SharedDtor();
}

void Duck::SharedDtor() {
  sound_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Duck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Duck::descriptor() {
  ::protobuf_base_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Duck& Duck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_2eproto::scc_info_Duck.base);
  return *internal_default_instance();
}


void Duck::Clear() {
// @@protoc_insertion_point(message_clear_start:Base.Duck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    sound_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Duck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Base.Duck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sound = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sound()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sound().data(), static_cast<int>(this->sound().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Base.Duck.sound");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Base.Duck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Base.Duck)
  return false;
#undef DO_
}

void Duck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Base.Duck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sound = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sound().data(), static_cast<int>(this->sound().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Base.Duck.sound");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sound(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Base.Duck)
}

::google::protobuf::uint8* Duck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Base.Duck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sound = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sound().data(), static_cast<int>(this->sound().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Base.Duck.sound");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sound(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Base.Duck)
  return target;
}

size_t Duck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Base.Duck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string sound = 1;
  if (has_sound()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sound());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Duck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Base.Duck)
  GOOGLE_DCHECK_NE(&from, this);
  const Duck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Duck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Base.Duck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Base.Duck)
    MergeFrom(*source);
  }
}

void Duck::MergeFrom(const Duck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Base.Duck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sound()) {
    set_has_sound();
    sound_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sound_);
  }
}

void Duck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Base.Duck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Duck::CopyFrom(const Duck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Base.Duck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Duck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Duck::Swap(Duck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Duck::InternalSwap(Duck* other) {
  using std::swap;
  sound_.Swap(&other->sound_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Duck::GetMetadata() const {
  protobuf_base_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Base
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Base::Welcome* Arena::CreateMaybeMessage< ::Base::Welcome >(Arena* arena) {
  return Arena::CreateInternal< ::Base::Welcome >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Base::Hello* Arena::CreateMaybeMessage< ::Base::Hello >(Arena* arena) {
  return Arena::CreateInternal< ::Base::Hello >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Base::Duck* Arena::CreateMaybeMessage< ::Base::Duck >(Arena* arena) {
  return Arena::CreateInternal< ::Base::Duck >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
